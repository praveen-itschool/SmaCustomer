package com.nareshit.raghu.service.Impl;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.nareshit.raghu.entity.Company;
import com.nareshit.raghu.service.ICompanyService;

import lombok.extern.slf4j.Slf4j;

@RestController
@RequestMapping("/company")
@Slf4j
public class CompanyRestController {

    @Autowired
    private ICompanyService service;

    @PostMapping("/create")
    public ResponseEntity<String> createCompany(@RequestBody Company company) {
        log.info("Entering createCompany method");
        ResponseEntity<String> response;

        try {
            Long id = service.createCompany(company);
            response = ResponseEntity.ok("Created with id: " + id);
            log.info("Company created with id: {}", id);
        } catch (Exception e) {
            log.error("Error creating company: {}", e.getMessage());
            response = ResponseEntity.internalServerError().body("Company creation failed");
        }

        log.info("Exiting createCompany method");
        return response;
    }

    @GetMapping("/all")
    public ResponseEntity<List<Company>> getAllCompanies() {
        log.info("Entering getAllCompanies method");
        try {
            List<Company> list = service.getAllCompanies();
            log.info("Fetched all companies successfully");
            return ResponseEntity.ok(list);
        } catch (Exception e) {
            log.error("Error fetching companies: {}", e.getMessage());
            return ResponseEntity.internalServerError().build();
        }
    }

    @GetMapping("/all/{id}")
    public ResponseEntity<?> getOneCompany(@PathVariable Long id) {
        log.info("Entering getOneCompany method with id: {}", id);
        try {
            Company company = service.getOneCompany(id);
            log.info("Fetched company with id: {}", id);
            return ResponseEntity.ok(company);
        } catch (Exception e) {
            log.error("Error fetching company: {}", e.getMessage());
            return ResponseEntity.notFound().build();
        }
    }

    @DeleteMapping("/all/{id}")
    public ResponseEntity<String> deleteOneCompany(@PathVariable Long id) {
        log.info("Entering deleteOneCompany method with id: {}", id);
        try {
            service.deleteOneCompany(id);
            log.info("Deleted company with id: {}", id);
            return ResponseEntity.ok("Deleted company with id: " + id);
        } catch (Exception e) {
            log.error("Error deleting company: {}", e.getMessage());
            return ResponseEntity.internalServerError().body("Error deleting company");
        }
    }
}
